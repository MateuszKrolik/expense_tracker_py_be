steps:
  # Install dependencies
  - name: python
    entrypoint: pip
    args: ["install", "-r", "requirements.txt", "--user"]

  # Run unit tests
  - name: python
    entrypoint: python
    args: ["-m", "pytest", "-s"]

  # Docker Build
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--platform=linux/amd64",
        "-t",
        "europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-expense-tracker:latest",
        ".",
      ]

  # Docker push to Google Artifact Registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-expense-tracker:latest",
      ]

  # Deploy to Cloud Run
  - name: google/cloud-sdk
    args:
      [
        "gcloud",
        "run",
        "deploy",
        "mkrolik-expense-tracker",
        "--image=europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-expense-tracker:latest",
        "--region",
        "europe-west1",
        "--platform",
        "managed",
        "--allow-unauthenticated",
        "--memory",
        "256Mi",
        "--cpu",
        "1",
        "--max-instances",
        "3",
        "--port",
        "8000",
        "--set-secrets",
        "DATABASE_URL=DATABASE_URL:latest,SECRET_KEY=SECRET_KEY:latest,GCS_BUCKET=GCS_BUCKET:latest",
      ]

# Store images in Google Artifact Registry
images:
  - europe-west1-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/mkrolik-expense-tracker:latest

options:
  logging: CLOUD_LOGGING_ONLY
